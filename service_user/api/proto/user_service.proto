syntax = "proto3";

package service_user;

service UserService{
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUsersByPagination(GetUsersByPaginationRequest) returns (GetUsersByPaginationResponse);
    rpc GetUserById(GetUserByIDRequest) returns (GetUserByIDResponse);
	rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
    rpc UpdateUserByID(UpdateUserByIDRequest) returns (UpdateUserByIDResponse);
	rpc DropUserById(DropUserByIDRequest) returns (DropUserByIDResponse);
}

message DropUserByIDResponse {
    string result = 1;
}

message DropUserByIDRequest {
    string id = 1;
}

message UpdateUserByIDResponse {
    string email = 1;
}

message UpdateUserByIDRequest {
    string id = 1;
	string email = 2;
	string user_name = 3;
	string first_name = 4;
	string last_name = 5;
}

message GetUserByEmailRequest {
    string email = 1;
}

message GetUserByEmailResponse{
    string id = 1;
	string email = 2;
	string user_name = 3;
	string first_name = 4;
	string last_name = 5;
	int32  rating = 6;
}

message GetUserByIDRequest {
    string id = 1;
}

message GetUserByIDResponse{
    string id = 1;
	string email = 2;
	string user_name = 3;
	string first_name = 4;
	string last_name = 5;
	int32  rating = 6;
}

message CreateUserRequest {
    string email = 1;
    string user_name = 2;
    string first_name = 3;
    string last_name = 4;
    string password = 5;
    string role = 6;
}

message CreateUserResponse {
    string user_id = 1;
}

message GetUsersByPaginationRequest{
    string page = 1;
    string per_page = 2;
}

message GetUsersByPaginationResponse {
    repeated User users = 1;
    string page = 2;
    string per_page = 3;
    int32 total_users = 4;
}

message User {
    string id = 1;
    string email = 2;
    string user_name = 3;
    string first_name = 4;
    string last_name = 5;
    int32 rating = 6;
}
